{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/juan/tragency/imports/ui/Trips.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/juan/tragency/imports/ui/Trips.vue","filename":"/home/juan/tragency/imports/ui/Trips.vue","passPerPreset":false,"envName":"development","cwd":"/home/juan/tragency","root":"/home/juan/tragency","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/juan/tragency/imports/ui/Trips.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/juan/tragency/imports/ui/Trips.vue"}},"code":"var router;\nmodule.link(\"../router\", {\n  router: function (v) {\n    router = v;\n  }\n}, 0);\nvar Trip;\nmodule.link(\"../api/Trip\", {\n  \"default\": function (v) {\n    Trip = v;\n  }\n}, 1);\nvar Faker;\nmodule.link(\"faker/locale/es\", {\n  \"default\": function (v) {\n    Faker = v;\n  }\n}, 2);\nmodule.exportDefault({\n  computed: {\n    user: function () {\n      if (this.$store.state.user != false) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    currentUserIsAdmin: function () {\n      if (this.$store.state.user === false) {\n        return false;\n      } else {\n        return this.$store.state.user.isAdmin;\n      }\n    }\n  },\n  data: function () {\n    return {\n      tripInEditingProcess: null,\n      editing: false,\n      valid: true,\n      city: \"\",\n      cityRules: [function (v) {\n        return !!v || \"City is required\";\n      }],\n      country: \"\",\n      countryRules: [function (v) {\n        return !!v || \"Country is required\";\n      }],\n      departure: \"\",\n      //\n      photo: \"\",\n      rulesrulesPhoto: [function (value) {\n        return !value || value.size < 2000000 || \"Avatar size should be less than 2 MB!\";\n      }],\n      departureRules: [function (v) {\n        return /((0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01])[- /.](19|20)?[0-9]{2})/.test(v) || \"Date must be valid\";\n      }, function (v) {\n        return !!v || \"Departure is required\";\n      }],\n      arrival: \"\",\n      //\n      arrivalRules: [function (v) {\n        return /((0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01])[- /.](19|20)?[0-9]{2})/.test(v) || \"Date must be valid\";\n      }, function (v) {\n        return !!v || \"Arrival is required\";\n      }],\n      description: \"\",\n      descriptionRules: [function (v) {\n        return !!v || \"Description is required\";\n      }],\n      price: \"\",\n      priceRules: [function (v) {\n        return !!v || \"Price is required\";\n      }, function (v) {\n        return /[0-9]/.test(v) || \"Price must be valid\";\n      }]\n    };\n  },\n  methods: {\n    validate: function () {\n      if (this.$refs.form.validate()) {\n        this.snackbar = true;\n        this.register();\n      }\n    },\n    register: function () {\n      //  let ran = Math.ceil(Math.random() * 1000000);\n      var trip = {\n        city: this.city,\n        country: this.country,\n        // photo: Faker.image.city(),\n        photo: this.image,\n        departure: this.departure,\n        arrival: this.arrival,\n        description: this.description,\n        price: this.price\n      };\n      console.log(trip);\n      Meteor.call(\"trip.add\", trip);\n    },\n    reset: function () {\n      this.$refs.form.reset();\n    },\n    formatDate: function (date) {\n      var d = new Date(date),\n          month = \"\" + (d.getMonth() + 1),\n          day = \"\" + d.getDate(),\n          year = d.getFullYear();\n      if (month.length < 2) month = \"0\" + month;\n      if (day.length < 2) day = \"0\" + day;\n      return [year, month, day].join(\"-\");\n    },\n    editProcess: function (item) {\n      this.tripInEditingProcess = item;\n      this.editing = true;\n      this.city = item.city;\n      this.country = item.country;\n      this.photo = item.photo;\n      this.departure = item.departure;\n      this.arrival = item.arrival;\n      this.description = item.description;\n      this.price = item.price;\n    },\n    editTrip: function () {\n      var trip = {\n        _id: this.tripInEditingProcess._id,\n        city: this.city,\n        country: this.country,\n        photo: this.photo,\n        departure: this.departure,\n        arrival: this.arrival,\n        description: this.description,\n        price: this.price\n      };\n      this.editing = false;\n      Meteor.call(\"trip.edit\", trip);\n      this.reset();\n    },\n    buy: function (item) {\n      this.$store.commit(\"updateItemTrip\", item);\n      router.push(\"buyTrip\");\n    }\n  },\n  meteor: {\n    $subscribe: {\n      trip: []\n    },\n    trip: function () {\n      return Trip.find({}, {\n        limit: 10,\n        sort: {\n          date: -1\n        }\n      });\n    }\n  }\n});","map":{"version":3,"sources":["/home/juan/tragency/imports/ui/Trips.vue"],"names":["router","module","link","v","Trip","Faker","exportDefault","computed","user","$store","state","currentUserIsAdmin","isAdmin","data","tripInEditingProcess","editing","valid","city","cityRules","country","countryRules","departure","photo","rulesrulesPhoto","value","size","departureRules","test","arrival","arrivalRules","description","descriptionRules","price","priceRules","methods","validate","$refs","form","snackbar","register","trip","image","console","log","Meteor","call","reset","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","editProcess","item","editTrip","_id","buy","commit","push","meteor","$subscribe","find","limit","sort"],"mappings":"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","sourcesContent":["\nimport { router } from \"../router\";\nimport Trip from \"../api/Trip\";\nimport Faker from \"faker/locale/es\";\n\nexport default {\n  computed: {\n    user() {\n      if (this.$store.state.user != false) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    currentUserIsAdmin() {\n      if (this.$store.state.user === false) {\n        return false;\n      } else {\n        return this.$store.state.user.isAdmin;\n      }\n    }\n  },\n  data: () => ({\n    tripInEditingProcess: null,\n    editing: false,\n    valid: true,\n    city: \"\",\n    cityRules: [v => !!v || \"City is required\"],\n    country: \"\",\n    countryRules: [v => !!v || \"Country is required\"],\n    departure: \"\",\n    //\n    photo: \"\",\n    rulesrulesPhoto: [\n      value =>\n        !value ||\n        value.size < 2000000 ||\n        \"Avatar size should be less than 2 MB!\"\n    ],\n    departureRules: [\n      v =>\n        /((0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01])[- /.](19|20)?[0-9]{2})/.test(\n          v\n        ) || \"Date must be valid\",\n      v => !!v || \"Departure is required\"\n    ],\n    arrival: \"\",\n    //\n    arrivalRules: [\n      v =>\n        /((0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01])[- /.](19|20)?[0-9]{2})/.test(\n          v\n        ) || \"Date must be valid\",\n      v => !!v || \"Arrival is required\"\n    ],\n    description: \"\",\n    descriptionRules: [v => !!v || \"Description is required\"],\n    price: \"\",\n    priceRules: [\n      v => !!v || \"Price is required\",\n      v => /[0-9]/.test(v) || \"Price must be valid\"\n    ]\n  }),\n  methods: {\n    validate() {\n      if (this.$refs.form.validate()) {\n        this.snackbar = true;\n        this.register();\n      }\n    },\n    register() {\n      //  let ran = Math.ceil(Math.random() * 1000000);\n      const trip = {\n        city: this.city,\n        country: this.country,\n        // photo: Faker.image.city(),\n        photo: this.image,\n        departure: this.departure,\n        arrival: this.arrival,\n        description: this.description,\n        price: this.price\n      };\n      console.log(trip);\n      Meteor.call(\"trip.add\", trip);\n    },\n    reset() {\n      this.$refs.form.reset();\n    },\n    formatDate(date) {\n      var d = new Date(date),\n        month = \"\" + (d.getMonth() + 1),\n        day = \"\" + d.getDate(),\n        year = d.getFullYear();\n\n      if (month.length < 2) month = \"0\" + month;\n      if (day.length < 2) day = \"0\" + day;\n\n      return [year, month, day].join(\"-\");\n    },\n    editProcess(item) {\n      this.tripInEditingProcess = item;\n      this.editing = true;\n      this.city = item.city;\n      this.country = item.country;\n      this.photo = item.photo;\n      this.departure = item.departure;\n      this.arrival = item.arrival;\n      this.description = item.description;\n      this.price = item.price;\n    },\n    editTrip() {\n      let trip = {\n        _id: this.tripInEditingProcess._id,\n        city: this.city,\n        country: this.country,\n        photo: this.photo,\n        departure: this.departure,\n        arrival: this.arrival,\n        description: this.description,\n        price: this.price\n      };\n      this.editing = false;\n      Meteor.call(\"trip.edit\", trip);\n      this.reset();\n    },\n    buy(item) {\n      this.$store.commit(\"updateItemTrip\", item);\n      router.push(\"buyTrip\");\n    }\n  },\n  meteor: {\n    $subscribe: {\n      trip: []\n    },\n    trip() {\n      return Trip.find({}, { limit: 10, sort: { date: -1 } });\n    }\n  }\n};\n"]},"sourceType":"script","hash":"1426122c0465f8bf02d072424c57c42783a47c2b"}
